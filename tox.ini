[tox]
envlist = py{35,36,37}-linux,py{36,37}-windows
skip_missing_interpreters = true
minversion = 3.0
requires = setuptools

[testenv]
description = Run CLI tests under {basepython}
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
passenv = http_proxy https_proxy no_proxy SSL_CERT_FILE TOXENV CI TRAVIS TRAVIS_* APPVEYOR APPVEYOR_* CODECOV_*
platform =
    linux: linux
    windows: win32
commands =
    killer --help
    killer --version
    killer -d

[testenv:codespell]
description = "Check spelling of code"
skip_install = true
ignore_errors = false
deps = codespell
commands = codespell --check-filenames --skip="*.pyc,*.class,*.git,*.vagrant,*.tox,*.egg-info,*.idea,*.vscode,_build,.doctrees,build,dist"

[testenv:flake8]
description = "Code quality inspection"
skip_install = true
ignore_errors = false
deps = flake8
commands = flake8 --statistics killer setup.py

[flake8]
max-line-length = 99
ignore = E203, W503, E401, F401, E226

[testenv:check]
description = "Run all code quality checks (basically everything except tests)"
skip_install = true
ignore_errors = false
deps =
    check-manifest
    {[testenv:codespell]deps}
    {[testenv:flake8]deps}
commands =
    python setup.py check --metadata
    check-manifest {toxinidir}
    {[testenv:codespell]commands}
    {[testenv:flake8]commands}

[testenv:coverage]
description = "Run the test suite with coverage checks and reporting"
skip_install = true
setenv =
    {[testenv]setenv}
    COVERAGE_FILE = .coverage.{envname}
passenv = TOXENV CODECOV_*
deps =
    pytest
    pytest-cov
    pytest-random-order
    coverage
commands =
    pytest --basetemp={envtmpdir} {posargs}

[pytest]
minversion = 3.0
testpaths = tests docs
norecursedirs = .github .git .tox .vagrant .idea .vscode dist build *.egg .*
cache_dir = {envtmpdir}.pytest_cache
addopts =
    --tb=short
    --durations=5
    --verbose
    --cov=killer
    --cov=tests
    --cov-report html
    --random-order
filterwarnings =
    ignore::DeprecationWarning
